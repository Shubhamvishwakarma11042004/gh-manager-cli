name: Automated Release Workflow

on:
  push:
    branches: [main]
  workflow_dispatch:

jobs:
  # Job: Build binaries for multiple platforms
  build:
    if: github.ref == 'refs/heads/main' || github.event_name == 'workflow_dispatch'
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        include:
          - os: ubuntu-latest
            platform: linux
            arch: x64
            ext: ''
          - os: macos-latest
            platform: macos
            arch: x64
            ext: ''
          - os: windows-latest
            platform: windows
            arch: x64
            ext: '.exe'
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Build application
        run: npm run build

      - name: Install pkg globally
        run: npm install -g pkg

      - name: Create binary
        run: pkg dist/index.js --targets node20-${{ matrix.platform }}-${{ matrix.arch }} --output gh-manager-${{ matrix.platform }}-${{ matrix.arch }}${{ matrix.ext }}

      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: gh-manager-${{ matrix.platform }}-${{ matrix.arch }}
          path: gh-manager-${{ matrix.platform }}-${{ matrix.arch }}${{ matrix.ext }}
          retention-days: 90

  # Job: Create automated release using semantic-release
  create-release:
    needs: build
    if: github.ref == 'refs/heads/main' || github.event_name == 'workflow_dispatch'
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pull-requests: write
      issues: write
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ secrets.GH_TOKEN || secrets.GITHUB_TOKEN }}
          ref: main

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Build application
        run: npm run build

      - name: Download all build artifacts
        uses: actions/download-artifact@v4
        with:
          path: ./binaries

      - name: Display downloaded artifacts
        run: |
          ls -la ./binaries/
          find ./binaries -type f -exec ls -la {} \;

      - name: Run semantic-release
        env:
          GITHUB_TOKEN: ${{ secrets.GH_TOKEN || secrets.GITHUB_TOKEN }}
          GH_TOKEN: ${{ secrets.GH_TOKEN || secrets.GITHUB_TOKEN }}
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
        run: npx semantic-release